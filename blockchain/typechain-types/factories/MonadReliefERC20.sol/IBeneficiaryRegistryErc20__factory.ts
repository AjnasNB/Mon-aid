/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IBeneficiaryRegistryErc20,
  IBeneficiaryRegistryErc20Interface,
} from "../../MonadReliefERC20.sol/IBeneficiaryRegistryErc20";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IBeneficiaryRegistryErc20__factory {
  static readonly abi = _abi;
  static createInterface(): IBeneficiaryRegistryErc20Interface {
    return new Interface(_abi) as IBeneficiaryRegistryErc20Interface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IBeneficiaryRegistryErc20 {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as IBeneficiaryRegistryErc20;
  }
}
