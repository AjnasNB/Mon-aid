/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  BeneficiaryRegistry,
  BeneficiaryRegistryInterface,
} from "../../BeneficiaryRegistry.sol/BeneficiaryRegistry";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_gov",
        type: "address",
      },
      {
        internalType: "address",
        name: "_govReg",
        type: "address",
      },
      {
        internalType: "address",
        name: "_jury",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "disasterId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
    ],
    name: "ClaimSubmitted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "official",
        type: "address",
      },
    ],
    name: "GovApproved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "JuryFinalized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "claims",
    outputs: [
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "disasterId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "govApproved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "juryApproved",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "active",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "govRegistry",
    outputs: [
      {
        internalType: "contract IGovernmentRegistry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "governance",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
    ],
    name: "governmentApprove",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
    ],
    name: "isApproved",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "jury",
    outputs: [
      {
        internalType: "contract IJuryStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
    ],
    name: "refreshJury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "wallet",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "disasterId",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "userUniqueHash",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "docHash",
        type: "bytes32",
      },
    ],
    name: "submitClaim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "uniqueness",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "beneficiaryId",
        type: "bytes32",
      },
    ],
    name: "walletOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080346100a057601f6109b038819003918201601f19168301916001600160401b038311848410176100a5578084926060946040528339810103126100a057610047816100bb565b906100606040610059602084016100bb565b92016100bb565b60018060a01b0380928160018060a01b0319951685600054161760005516836001541617600155169060025416176002556040516108e090816100d08239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b03821682036100a05756fe608060408181526004918236101561001657600080fd5b600092833560e01c91826309521458146107bb5750816309fd3f6e1461078657816323878ec2146105ee5781633d6abe9a146105c257816348aefc32146105685781635aa6e6751461053557816379539a17146103ed5781638f79cd8e1461014d578163eff0f592146100ca575063ffec38751461009357600080fd5b346100c657816003193601126100c65760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b5080fd5b905034610149576020600319360112610149578160c09360ff923581526003602052209173ffffffffffffffffffffffffffffffffffffffff8354169260018101549160036002830154920154928151958652602086015284015281811615156060840152818160081c161515608084015260101c16151560a0820152f35b8280fd5b8383346100c65760a06003193601126100c65782356024359173ffffffffffffffffffffffffffffffffffffffff8084168094036103e957604435906084359085156103a6578487526020906003825280858920541661036457845182810190858252606435878201528681526060810167ffffffffffffffff9282821084831117610351578189528251902091828c528c865260ff898d2054166103115750508952898352858920805460ff1916600117905585519060c08201908111828210176102fe57899a5096600381999a927f5bfd887022404376721d1d03efca2b43ed025158ede19c852af0098d859f35469989528b81528581018881528982019088825260608301968688528b608085019780895260a0860197600189528152868b52209351167fffffffffffffffffffffffff00000000000000000000000000000000000000008454161783555160018301555160028201550192511515917fffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00000060ff62ff000061ff0087549451151560081b169451151560101b169416911617171790558351928352820152a380f35b60248a60418d634e487b7160e01b835252fd5b907f6475706c6963617465207573657200000000000000000000000000000000000060a46064938862461bcd60e51b855285820152600e60848201520152fd5b60248c60418f634e487b7160e01b835252fd5b6064898387519162461bcd60e51b8352820152600660248201527f65786973747300000000000000000000000000000000000000000000000000006044820152fd5b606488602086519162461bcd60e51b8352820152600a60248201527f6261642077616c6c6574000000000000000000000000000000000000000000006044820152fd5b8480fd5b91905034610149576020806003193601126105315782359260248273ffffffffffffffffffffffffffffffffffffffff600154168551928380927f9c2806c700000000000000000000000000000000000000000000000000000000825233878301525afa9081156105275786916104f6575b50156104b55750906003809284865252832001600160ff19825461048860ff8260101c166107f6565b1617905533907f1de222e2bdca5bdd202ea9de786f34abcf61da962420268a2cc45aaf07948dc68380a380f35b90606492519162461bcd60e51b8352820152600c60248201527f6e6f74206f6666696369616c00000000000000000000000000000000000000006044820152fd5b90508281813d8311610520575b61050d8183610841565b8101031261051c57513861045f565b8580fd5b503d610503565b84513d88823e3d90fd5b8380fd5b5050346100c657816003193601126100c65773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b90503461014957602060031936011261014957816020936003923581528285522001549060ff8260101c1691826105b7575b826105a9575b50519015158152f35b60081c60ff169150386105a0565b60ff8116925061059a565b90503461014957602060031936011261014957816020938260ff93358252855220541690519015158152f35b90503461014957816003193601126101495780359182845260036020526003818520019182549061062460ff8360101c166107f6565b60a073ffffffffffffffffffffffffffffffffffffffff600254169160248551809481937f346bec3a0000000000000000000000000000000000000000000000000000000083528335908301525afa801561077c5786918791610701575b509360209392827f5f9441bfb5a1064a5a44361328db7eb8e0922e8550e247776e5a31ba3ddaf90c9660ff94916106f9575b506106cb575b505460081c1690519015158152a280f35b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100178155386106ba565b9050386106b4565b91505060a0929192813d60a011610774575b8161072060a09383610841565b8101031261051c577f5f9441bfb5a1064a5a44361328db7eb8e0922e8550e247776e5a31ba3ddaf90c93602093826107686080610761606060ff9701610898565b9201610898565b92965092509293610682565b3d9150610713565b83513d88823e3d90fd5b5050346100c657816003193601126100c65760209073ffffffffffffffffffffffffffffffffffffffff600254169051908152f35b92915034610531576020600319360112610531573583526003602090815292205473ffffffffffffffffffffffffffffffffffffffff168152f35b156107fd57565b606460405162461bcd60e51b815260206004820152600860248201527f6e6f20636c61696d0000000000000000000000000000000000000000000000006044820152fd5b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761088257604052565b634e487b7160e01b600052604160045260246000fd5b519081151582036108a557565b600080fdfea2646970667358221220f85520ab60f7ff473eaea6953f630658e92f7a9e90bb7de7ec926ea82e30a2ad64736f6c63430008180033";

type BeneficiaryRegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BeneficiaryRegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BeneficiaryRegistry__factory extends ContractFactory {
  constructor(...args: BeneficiaryRegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _gov: AddressLike,
    _govReg: AddressLike,
    _jury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_gov, _govReg, _jury, overrides || {});
  }
  override deploy(
    _gov: AddressLike,
    _govReg: AddressLike,
    _jury: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_gov, _govReg, _jury, overrides || {}) as Promise<
      BeneficiaryRegistry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): BeneficiaryRegistry__factory {
    return super.connect(runner) as BeneficiaryRegistry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BeneficiaryRegistryInterface {
    return new Interface(_abi) as BeneficiaryRegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BeneficiaryRegistry {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as BeneficiaryRegistry;
  }
}
