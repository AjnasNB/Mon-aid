/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IJuryStaking,
  IJuryStakingInterface,
} from "../../BeneficiaryRegistry.sol/IJuryStaking";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "claimId",
        type: "bytes32",
      },
    ],
    name: "tallies",
    outputs: [
      {
        internalType: "uint256",
        name: "yes",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "no",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "quorum",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "decided",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class IJuryStaking__factory {
  static readonly abi = _abi;
  static createInterface(): IJuryStakingInterface {
    return new Interface(_abi) as IJuryStakingInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): IJuryStaking {
    return new Contract(address, _abi, runner) as unknown as IJuryStaking;
  }
}
